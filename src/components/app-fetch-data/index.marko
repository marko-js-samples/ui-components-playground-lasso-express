import './style.less';
import { getUsers } from '~/src/services/users';
import 'purecss/build/tables.css';

class {
    onInput(input) {
        var users = [];
        var pageIndex = -1;

        var usersData = input.usersData;
        if (usersData) {
            users = usersData.users;
            pageIndex = usersData.pageIndex;
        }

        this.state = {
            loading: false,
            users: users,
            pageIndex: pageIndex
        };
    }

    onMount() {
        this.fetchPromise = Promise.resolve();

        if (this.state.users.length === 0) {
            this.loadMore();
        }
    }

    loadMore() {
        this.state.loading = true;

        var state = this.state;

        this.fetchPromise = this.fetchPromise
            .then(function() {
                return getUsers({
                       pageIndex: ++state.pageIndex
                   });
            })
            .then(function(usersData) {
                state.users = state.users.concat(usersData.users);
                state.loading = false;
            })
            .catch(function(e) {
                state.loading = false;
                console.log('Fetch failed:', e);
            });
    }

    handleLoadMoreClick() {
        this.loadMore();
    }

    onUpdate() {
        if (this.state.pageIndex > 0) {
            var tableContainer = this.getEl('tableContainer');
            tableContainer.scrollTop = tableContainer.scrollHeight;
        }
    }
}

<div.app-fetch-data>
    <div class="table-container" ref="tableContainer">
        <table class="pure-table" if(state.users.length)>
            <thead>
                <tr>
                    <td>ID</td>
                    <td>Avatar</td>
                    <td>Name</td>
                    <td>Email</td>
                </tr>
            </thead>
            <tbody>
                <tr for(user in state.users)>
                    <td>${user.id}</td>
                    <td><img src=user.avatar width=50 height=50></td>
                    <td>${user.firstName} ${user.lastName}</td>
                    <td>${user.email}</td>
                </tr>
            </tbody>
        </table>
    </div>
    <app-button label=(state.users.length ? "Load more users" : 'Load users') onClick('handleLoadMoreClick')/>
    <span class=[state.loading ? 'loading' : null]/>
</div>